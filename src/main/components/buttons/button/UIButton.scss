/* Copyright 2022 SIB Visions GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

@import '../../../../application-frame/styling/scssutil/buttonColors.scss';

/// Inherit height and width from parent who has set it by the layout
.rc-button {
    --btnJustify: center;
    --btnAlign: center;

    height: inherit;
    width: inherit;

    justify-content: var(--btnJustify);
    align-items: var(--btnAlign);
    padding: var(--btnPadding, 0.5rem 1rem);

    &:not(.login-button):not(.lost-password-button) {
        .p-button-icon-left {
            margin-right: 0;
        }

        .p-button-icon-right {
            margin-left: 0;
        }
    } 


    &.mouse-border {
        background: transparent;
        border-color: transparent;
    }

    @include btnHover
}

.rc-button, .rc-togglebutton {
    &.p-button.p-button-icon-only {
        width: unset;
        padding: var(--btnPadding, 0.5rem 0.5rem);
    
        .rc-button-icon {
            align-self: center;
        }
    
        &.rc-toolbar-button {
            padding: 0;
        }

        .p-button-label {
            display: none;
        }
    }
}

.rc-editor-linked .p-button.p-button-icon-only, .rc-editor-date .p-button.p-button-icon-only {
    width: unset;
    padding: var(--btnPadding, 0.5rem 0.5rem);

    &.p-autocomplete-dropdown, &.p-datepicker-trigger {
        padding: 0px 0.5rem;
    }

    .rc-button-icon {
        align-self: center;
    }
}

/// If the button is dark set the foreground to white
.bright-button {
    color: var(--button-color-bright);
    &:enabled:hover {
        color: var(--button-color-bright);
    }
}

/// If the button is bright set the foreground to a darker color
.dark-button {
    color: var(--button-color-dark);
    &:enabled:hover {
        color: var(--button-color-dark);
    }
}

/// When the border is not painted background and border are transparent and the color is set to standard
.border-notpainted, .border-notpainted:enabled:hover {
    background: transparent !important;
    border-color: transparent !important;
}

.reactUI {
    .p-button-label {
        flex: unset;
        white-space: nowrap;
    }

    .button-html-label {
        flex: unset;
        white-space: nowrap;
        transition: all .2s;
    }
}

.reactUI:not(.basti_mobile) {
    .p-button.p-button-icon-only {
        &.p-autocomplete-dropdown, &.p-datepicker-trigger {
            @include btnHover;
        }
    }
}


.rc-button.p-button.p-button-icon-only {
    width: inherit;
    height: inherit;
}

.rc-button-icon {
    font-size: var(--iconHeight);
    color: var(--iconColor);
    &:not([class*="fas fa-"]):not([class*="far fa-"]):not([class*="fab fa-"]) {
        width: var(--iconWidth);
        height: var(--iconHeight);
        display: inline-block;
        background-image: var(--iconImage);
    }

    &:not(span) {
        margin-right: 4px;
    }

    @at-root #{selector-unify(&, "span")} {
        .gap-top:not(.p-button-icon-only):not(.login-button):not(.lost-password-button) & {
            margin-top: var(--iconTextGap);
        }

        .gap-left:not(.p-button-icon-only):not(.login-button):not(.lost-password-button) & {
            margin-left: var(--iconTextGap);
        }

        .gap-right:not(.p-button-icon-only):not(.login-button):not(.lost-password-button) & {
            margin-right: var(--iconTextGap);
        }

        .gap-bottom:not(.p-button-icon-only):not(.login-button):not(.lost-password-button) & {
            margin-bottom: var(--iconTextGap);
        }

        .icon-center-left:not(.p-button-icon-only):not(.no-center-gap):not(.login-button):not(.lost-password-button) & {
            margin-left: var(--iconCenterGap);
        }
        .icon-center-right:not(.p-button-icon-only):not(.no-center-gap):not(.login-button):not(.lost-password-button) & {
            margin-right: var(--iconCenterGap);
        }
    }
}

.reactUI {
    .p-button.p-button-link:enabled:focus {
        box-shadow: unset;
        border-color: transparent;
    
        .p-button-label {
            text-decoration: underline;
        }

        .button-html-label {
            text-decoration: underline;
        }
    }
}

.hyperlink-wrapper {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;

    a {
        text-decoration: underline;
    }

    .hyperlink-disabled {
        pointer-events: none;
    }
}